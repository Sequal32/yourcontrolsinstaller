{"version":3,"sources":["components/Dialog.js","components/DirectoryEntry.js","components/FeatureList.js","components/Overlay.js","App.js","reportWebVitals.js","index.js"],"names":["Dialog","this","props","callback","class","style","hidden","title","description","onClick","onAcknowledge","bind","buttonText","React","Component","DirectoryEntry","state","browsing","document","body","cursor","setState","onBrowse","location","src","hover","onMouseEnter","browseHover","onMouseLeave","browseLeave","onMouseDown","browseClick","FeatureEntry","classString","generateClassName","onHover","onLeave","checked","name","OptionalFeatures","groupMap","selectedFeatures","Set","prevProps","features","clear","featureName","featureGroup","has","delete","groupSelectedFeature","add","forceUpdate","featureList","map","feature","selectFeature","group","Overlay","opacity","duration","direction","fill","div","finished","keyframes","getKeyFrames","timing","getTiming","onFinish","App","programDirectory","packageDirectory","installing","currentDialog","dialogActive","promisified","cmd","then","args","releaseData","date","Date","tagName","toDateString","Array","from","catch","errorMessage","finally","type","browse_for","onDirectoryBrowse","featuresCallback","promptInstall","dialogButtonClicked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c00c82c.chunk.js","sourcesContent":["import '../stylesheet.css';\r\nimport React from 'react';\r\n\r\nexport default class Dialog extends React.Component {\r\n    onAcknowledge() {\r\n        if (this.props.callback) {\r\n            this.props.callback()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"dialog-div\" style={this.props.hidden ? {\"top\": \"25%\"} : {\"top\": \"-50%\"}}>\r\n                <h1>{this.props.title}</h1>\r\n                <p>{this.props.description}</p>\r\n                <button class=\"dialog-button\" onClick={this.onAcknowledge.bind(this)}>{this.props.buttonText}</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../stylesheet.css';\r\n\r\nclass DirectoryEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n        this.browsing = false\r\n    }\r\n\r\n    browseHover() {\r\n        document.body.style.cursor = \"pointer\"\r\n        this.setState({\"hover\": true})\r\n    }\r\n\r\n    browseLeave() {\r\n        document.body.style.cursor = \"default\"\r\n        this.setState({\"hover\": false})\r\n    }\r\n\r\n    browseClick() {\r\n        this.props.onBrowse()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"directory-div\">\r\n                <p class=\"overtop-label\">{this.props.title}</p>\r\n                <div class=\"directory-inner-div\">\r\n                    <p class=\"directory-text\">{this.props.location}</p>\r\n                    <img class=\"browse-button\" src={this.state.hover ? \"folder-open.svg\" : \"folder.svg\"} onMouseEnter={this.browseHover.bind(this)} onMouseLeave={this.browseLeave.bind(this)} onMouseDown={this.browseClick.bind(this)}></img>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DirectoryEntry;","import React from 'react';\r\nimport '../stylesheet.css';\r\n\r\nclass FeatureEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\"hover\": false}\r\n    }\r\n\r\n    onHover() {\r\n        this.setState({\"hover\": true})\r\n    }\r\n\r\n    onLeave() {\r\n        this.setState({\"hover\": false})\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.callback) {\r\n            this.props.callback()\r\n        }\r\n    }\r\n\r\n    generateClassName() {\r\n        var classString = \"custom-checkbox\"\r\n        \r\n        if (this.state.hover) {\r\n            classString += \" checkbox-hover\"\r\n        }\r\n\r\n        return classString\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"feature-div\">\r\n                <div class={this.generateClassName()} onMouseEnter={this.onHover.bind(this)} onMouseLeave={this.onLeave.bind(this)} onMouseDown={this.onClick.bind(this)} checked={this.state.checked}>\r\n                    <img src=\"check.png\" class=\"checkbox-image\" hidden={!this.props.checked}/>\r\n                </div>\r\n                <span class=\"feature-text\">{this.props.name}</span>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nclass OptionalFeatures extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.groupMap = {}\r\n        this.selectedFeatures = new Set()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.features != this.props.features) {\r\n            this.selectedFeatures.clear()\r\n            this.groupMap.clear()\r\n        }\r\n    }\r\n\r\n    selectFeature(featureName, featureGroup) {\r\n        if (this.selectedFeatures.has(featureName)) {\r\n\r\n            this.selectedFeatures.delete(featureName)\r\n\r\n        } else {\r\n\r\n            // Make sure only one from each group gets selected\r\n            if (featureGroup) {\r\n                const groupSelectedFeature = this.groupMap[featureGroup]\r\n                // Remove the other selected feature from the group\r\n                if (groupSelectedFeature) {\r\n                    this.selectedFeatures.delete(groupSelectedFeature)\r\n                }\r\n                // Insert the new selected feature into the group\r\n                this.groupMap[featureGroup] = featureName\r\n            }\r\n            \r\n            this.selectedFeatures.add(featureName)\r\n        }\r\n\r\n        if (this.props.callback) {\r\n            this.props.callback(this.selectedFeatures)\r\n        }\r\n\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        this.features = this.props.featureList != null ? this.props.featureList.map((feature) => <FeatureEntry name={feature.name} callback={this.selectFeature.bind(this, feature.name, feature.group)} checked={this.selectedFeatures.has(feature.name)}/>) : []\r\n\r\n        return (\r\n            <div class=\"feature-list\">\r\n                <h3 class=\"feature-list-text\">\r\n                    Optional Features\r\n                </h3>\r\n                <div class=\"feature-list-grid\">\r\n                    {this.features}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionalFeatures;","import '../stylesheet.css';\r\nimport { Animated } from 'react-web-animation';\r\nimport React from 'react'; \r\n\r\nclass Overlay extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\"finished\": false}\r\n    }\r\n\r\n    getKeyFrames() {\r\n        return [\r\n            {opacity: 0},\r\n            {opacity: 0.6},\r\n        ];\r\n    }\r\n\r\n    getTiming() {\r\n        return {\r\n            duration: 500,\r\n            direction: this.props.hidden ? \"normal\" : \"reverse\",\r\n            fill: \"forwards\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.hidden != prevProps.hidden) {\r\n            this.setState({\"finished\": false})\r\n        }\r\n    }\r\n\r\n    onFinish() {\r\n        // Do not hide div when blurred\r\n        if (!this.props.hidden) {\r\n            this.setState({\"finished\": true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Animated.div hidden={this.state.finished} class=\"overlay\" keyframes={this.getKeyFrames()} timing={this.getTiming()} onFinish={this.onFinish.bind(this)}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overlay;","import './stylesheet.css';\r\nimport React from 'react';\r\nimport { promisified, invoke } from 'tauri/api/tauri'\r\n\r\nimport Dialog from './components/Dialog'\r\nimport DirectoryEntry from './components/DirectoryEntry'\r\nimport OptionalFeatures from './components/FeatureList'\r\nimport Overlay from './components/Overlay'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            programDirectory: \"Unknown\",\r\n            packageDirectory: \"Unknown\",\r\n            browsing: false,\r\n            installing: false,\r\n            \r\n            currentDialog: {\r\n                title: \"\",\r\n                description: \"\",\r\n                buttonText: \"\",\r\n            },\r\n            dialogActive: false\r\n        }\r\n        this.selectedFeatures = []\r\n    }\r\n\r\n    componentDidMount() {\r\n        promisified({\r\n            cmd: \"startup\"\r\n        }).then((args) => {\r\n            if (args.releaseData !== null) {\r\n                const date = new Date(args.releaseData.date * 1000)\r\n\r\n                this.setState({\r\n                    currentDialog: {\r\n                        title: \"Release \" + args.releaseData.tagName,\r\n                        description: `Released on ${date.toDateString()}`,\r\n                        buttonText: \"OK\",\r\n                    },\r\n                    dialogActive: true\r\n                })\r\n            }\r\n            \r\n\r\n            this.setState(args)\r\n        })\r\n    }\r\n\r\n    featuresCallback(selectedFeatures) {\r\n        this.selectedFeatures = Array.from(selectedFeatures)\r\n    }\r\n\r\n    promptInstall() {\r\n        if (this.state.installing) {return}\r\n\r\n        this.setState({\"installing\": true})\r\n\r\n        promisified({\r\n            cmd: \"install\",\r\n            features: this.selectedFeatures\r\n        }).then(() => {\r\n\r\n            this.setState({\r\n                currentDialog: {\r\n                    title: \"Installation Successful\",\r\n                    description: \"The program has been successfully installed. Get flying!\",\r\n                    buttonText: \"OK\"\r\n                },\r\n                dialogActive: true\r\n            })\r\n\r\n        }).catch((errorMessage) => {\r\n\r\n            this.setState({\r\n                currentDialog: {\r\n                    title: \"Installation Failed\",\r\n                    description: errorMessage + \"\\n\\nMore info available in Log.txt.\",\r\n                    buttonText: \"OK\",\r\n                },\r\n                dialogActive: true\r\n            })\r\n\r\n        }).finally(() => {\r\n            this.setState({installing: false})\r\n        })\r\n    }\r\n\r\n    onDirectoryBrowse(type) {\r\n        if (this.state.browsing) {return}\r\n\r\n        this.setState({browsing: true})\r\n\r\n        promisified({\r\n            cmd: \"browse\",\r\n            browse_for: type\r\n        }).then((location) => {\r\n            this.setState({[type + \"Directory\"]: location})\r\n        }).finally(() => {\r\n            this.setState({browsing: false})\r\n        })\r\n    }\r\n\r\n    dialogButtonClicked() {\r\n        this.setState({dialogActive: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                  <img class=\"logo-image\" src=\"logo.png\"/>\r\n                  <DirectoryEntry title=\"Installation Directory\" location={this.state.programDirectory} onBrowse={this.onDirectoryBrowse.bind(this, \"program\")}/>\r\n                  <DirectoryEntry title=\"Community Packages Directory\" location={this.state.packageDirectory} onBrowse={this.onDirectoryBrowse.bind(this, \"package\")}/>\r\n                  <OptionalFeatures featureList={this.state.featureList} callback={this.featuresCallback.bind(this)}/>\r\n                  <button class=\"install-button\" onClick={this.promptInstall.bind(this)}>{this.state.installing ? \"Installing...\" : \"Install\"}</button>\r\n                  <Overlay hidden={this.state.dialogActive}/>\r\n                  <Dialog hidden={this.state.dialogActive} title={this.state.currentDialog.title} description={this.state.currentDialog.description} buttonText={this.state.currentDialog.buttonText} callback={this.dialogButtonClicked.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}