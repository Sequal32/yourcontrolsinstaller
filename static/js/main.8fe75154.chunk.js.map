{"version":3,"sources":["components/Dialog.js","components/DirectoryEntry.js","components/FeatureList.js","components/Overlay.js","App.js","reportWebVitals.js","index.js"],"names":["Dialog","this","props","onAck","onClose","class","style","hidden","title","onClick","bind","description","onAcknowledge","buttonText","React","Component","DirectoryEntry","state","browsing","document","body","cursor","setState","onBrowse","location","src","hover","onMouseEnter","browseHover","onMouseLeave","browseLeave","onMouseDown","browseClick","FeatureEntry","callback","classString","generateClassName","onHover","onLeave","checked","name","OptionalFeatures","groupMap","selectedFeatures","Set","prevProps","features","clear","featureName","featureGroup","has","delete","groupSelectedFeature","add","forceUpdate","featureList","map","feature","selectFeature","group","Overlay","opacity","duration","direction","fill","div","finished","keyframes","getKeyFrames","timing","getTiming","onFinish","App","programDirectory","packageDirectory","installing","currentDialog","dialogActive","selectedOptions","promisified","cmd","then","args","releaseData","date","Date","tagName","toDateString","Array","from","options","catch","errorMessage","finally","uninstalling","type","browse_for","invoke","includes","open","onDirectoryBrowse","featuresCallback","optionsCallback","promptInstall","disabled","promptUninstall","dialogButtonClicked","dialogClosed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8fe75154.chunk.js","sourcesContent":["import '../stylesheet.css';\r\nimport React from 'react';\r\n\r\nexport default class Dialog extends React.Component {\r\n    onAcknowledge() {\r\n        if (this.props.onAck) {\r\n            this.props.onAck()\r\n        }\r\n    }\r\n\r\n    onClose() {\r\n        if (this.props.onClose) {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"dialog-div\" style={this.props.hidden ? {\"top\": \"25%\"} : {\"top\": \"-50%\"}}>\r\n                <h1>{this.props.title}</h1>\r\n                <button class=\"dialog-x\" onClick={this.onClose.bind(this)}>X</button>\r\n                <p class=\"dialog-desc\">{this.props.description}</p>\r\n                <button class=\"generic-button dialog-button\" onClick={this.onAcknowledge.bind(this)}>{this.props.buttonText}</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport '../stylesheet.css';\r\n\r\nclass DirectoryEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n        this.browsing = false\r\n    }\r\n\r\n    browseHover() {\r\n        document.body.style.cursor = \"pointer\"\r\n        this.setState({\"hover\": true})\r\n    }\r\n\r\n    browseLeave() {\r\n        document.body.style.cursor = \"default\"\r\n        this.setState({\"hover\": false})\r\n    }\r\n\r\n    browseClick() {\r\n        this.props.onBrowse()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"directory-div\">\r\n                <p class=\"overtop-label\">{this.props.title}</p>\r\n                <div class=\"directory-inner-div\">\r\n                    <p class=\"directory-text\">{this.props.location}</p>\r\n                    <img class=\"browse-button\" src={this.state.hover ? \"folder-open.svg\" : \"folder.svg\"} onMouseEnter={this.browseHover.bind(this)} onMouseLeave={this.browseLeave.bind(this)} onMouseDown={this.browseClick.bind(this)}></img>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DirectoryEntry;","import React from 'react';\r\nimport '../stylesheet.css';\r\n\r\nclass FeatureEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\"hover\": false}\r\n    }\r\n\r\n    onHover() {\r\n        this.setState({\"hover\": true})\r\n    }\r\n\r\n    onLeave() {\r\n        this.setState({\"hover\": false})\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.callback) {\r\n            this.props.callback()\r\n        }\r\n    }\r\n\r\n    generateClassName() {\r\n        var classString = \"custom-checkbox\"\r\n        \r\n        if (this.state.hover) {\r\n            classString += \" checkbox-hover\"\r\n        }\r\n\r\n        return classString\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"feature-div\">\r\n                <div class={this.generateClassName()} onMouseEnter={this.onHover.bind(this)} onMouseLeave={this.onLeave.bind(this)} onMouseDown={this.onClick.bind(this)} checked={this.state.checked}>\r\n                    <img src=\"check.png\" class=\"checkbox-image\" hidden={!this.props.checked}/>\r\n                </div>\r\n                <span class=\"feature-text\">{this.props.name}</span>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nclass OptionalFeatures extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.groupMap = {}\r\n        this.selectedFeatures = new Set()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.features != this.props.features) {\r\n            this.selectedFeatures.clear()\r\n            this.groupMap.clear()\r\n        }\r\n    }\r\n\r\n    selectFeature(featureName, featureGroup) {\r\n        if (this.selectedFeatures.has(featureName)) {\r\n\r\n            this.selectedFeatures.delete(featureName)\r\n\r\n        } else {\r\n\r\n            // Make sure only one from each group gets selected\r\n            if (featureGroup) {\r\n                const groupSelectedFeature = this.groupMap[featureGroup]\r\n                // Remove the other selected feature from the group\r\n                if (groupSelectedFeature) {\r\n                    this.selectedFeatures.delete(groupSelectedFeature)\r\n                }\r\n                // Insert the new selected feature into the group\r\n                this.groupMap[featureGroup] = featureName\r\n            }\r\n            \r\n            this.selectedFeatures.add(featureName)\r\n        }\r\n\r\n        if (this.props.callback) {\r\n            this.props.callback(this.selectedFeatures)\r\n        }\r\n\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        this.features = this.props.featureList != null ? this.props.featureList.map((feature) => <FeatureEntry name={feature.name} callback={this.selectFeature.bind(this, feature.name, feature.group)} checked={this.selectedFeatures.has(feature.name)}/>) : []\r\n\r\n        return (\r\n            <div class=\"feature-list-grid\">\r\n                {this.features}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionalFeatures;\r\nexport {FeatureEntry, OptionalFeatures};","import '../stylesheet.css';\r\nimport { Animated } from 'react-web-animation';\r\nimport React from 'react'; \r\n\r\nclass Overlay extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\"finished\": false}\r\n    }\r\n\r\n    getKeyFrames() {\r\n        return [\r\n            {opacity: 0},\r\n            {opacity: 0.6},\r\n        ];\r\n    }\r\n\r\n    getTiming() {\r\n        return {\r\n            duration: 500,\r\n            direction: this.props.hidden ? \"normal\" : \"reverse\",\r\n            fill: \"forwards\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.hidden != prevProps.hidden) {\r\n            this.setState({\"finished\": false})\r\n        }\r\n    }\r\n\r\n    onFinish() {\r\n        // Do not hide div when blurred\r\n        if (!this.props.hidden) {\r\n            this.setState({\"finished\": true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Animated.div hidden={this.state.finished} class=\"overlay\" keyframes={this.getKeyFrames()} timing={this.getTiming()} onFinish={this.onFinish.bind(this)}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overlay;","import './stylesheet.css';\r\nimport React from 'react';\r\nimport { promisified, invoke } from 'tauri/api/tauri'\r\nimport { open } from 'tauri/api/window'\r\n\r\nimport Dialog from './components/Dialog'\r\nimport DirectoryEntry from './components/DirectoryEntry'\r\nimport {OptionalFeatures, FeatureEntry} from './components/FeatureList'\r\nimport Overlay from './components/Overlay'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            programDirectory: \"Unknown\",\r\n            packageDirectory: \"Unknown\",\r\n            browsing: false,\r\n            installing: false,\r\n            \r\n            currentDialog: {\r\n                title: \"\",\r\n                description: \"\",\r\n                buttonText: \"\",\r\n            },\r\n            dialogActive: false\r\n        }\r\n        this.selectedFeatures = []\r\n        this.selectedOptions = []\r\n    }\r\n\r\n    componentDidMount() {\r\n        promisified({\r\n            cmd: \"startup\"\r\n        }).then((args) => {\r\n            if (args.releaseData !== null) {\r\n                const date = new Date(args.releaseData.date * 1000)\r\n\r\n                this.setState({\r\n                    currentDialog: {\r\n                        title: \"Release \" + args.releaseData.tagName,\r\n                        description: `Released on ${date.toDateString()}`,\r\n                        buttonText: \"Release Notes\",\r\n                    },\r\n                    dialogActive: true\r\n                })\r\n            }\r\n            \r\n\r\n            this.setState(args)\r\n        })\r\n    }\r\n\r\n    featuresCallback(selectedFeatures) {\r\n        this.selectedFeatures = Array.from(selectedFeatures)\r\n    }\r\n\r\n    optionsCallback(selectedOptions) {\r\n        this.selectedOptions = Array.from(selectedOptions)\r\n    }\r\n\r\n    promptInstall() {\r\n        this.setState({\"installing\": true})\r\n\r\n        promisified({\r\n            cmd: \"install\",\r\n            features: this.selectedFeatures,\r\n            options: this.selectedOptions\r\n        }).then(() => {\r\n\r\n            this.setState({\r\n                currentDialog: {\r\n                    title: \"Installation Successful\",\r\n                    description: \"The program has been successfully installed!\\n\\nGet flying!\",\r\n                    buttonText: \"Launch\"\r\n                },\r\n                dialogActive: true\r\n            })\r\n\r\n        }).catch((errorMessage) => {\r\n\r\n            this.setState({\r\n                currentDialog: {\r\n                    title: \"Installation Failed\",\r\n                    description: errorMessage + \"\\n\\nMore info available in Log.txt.\",\r\n                    buttonText: \"OK\",\r\n                },\r\n                dialogActive: true\r\n            })\r\n\r\n        }).finally(() => {\r\n            this.setState({installing: false})\r\n        })\r\n    }\r\n\r\n    promptUninstall() {\r\n        this.setState({\"uninstalling\": true})\r\n\r\n        promisified({\r\n            cmd: \"uninstall\",\r\n        }).then(() => {\r\n\r\n            this.setState({\r\n                currentDialog: {\r\n                    title: \"Uninstalling Successful\",\r\n                    description: \"The program has been uninstalled.\",\r\n                    buttonText: \"OK\"\r\n                },\r\n                dialogActive: true\r\n            })\r\n\r\n        }).catch((errorMessage) => {\r\n\r\n            this.setState({\r\n                currentDialog: {\r\n                    title: \"Uninstalling Failed\",\r\n                    description: errorMessage + \"\\n\\nMore info available in Log.txt.\",\r\n                    buttonText: \"OK\",\r\n                },\r\n                dialogActive: true\r\n            })\r\n\r\n        }).finally(() => {\r\n            this.setState({uninstalling: false})\r\n        })\r\n    }\r\n\r\n    onDirectoryBrowse(type) {\r\n        if (this.state.browsing) {return}\r\n\r\n        this.setState({browsing: true})\r\n\r\n        promisified({\r\n            cmd: \"browse\",\r\n            browse_for: type\r\n        }).then((location) => {\r\n            this.setState({[type + \"Directory\"]: location})\r\n        }).finally(() => {\r\n            this.setState({browsing: false})\r\n        })\r\n    }\r\n\r\n    dialogButtonClicked() {\r\n        if (this.state.currentDialog.buttonText == \"Launch\") {\r\n            invoke({\r\n                cmd: \"launch\"\r\n            })\r\n            //\r\n        } else if (this.state.currentDialog.title.includes(\"Release\")) {\r\n            open(\"https://github.com/Sequal32/yourcontrol/releases/latest\")\r\n        }\r\n        this.setState({dialogActive: false})\r\n    }\r\n\r\n    dialogClosed() {\r\n        this.setState({dialogActive: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                    <img class=\"logo-image\" src=\"logo.png\"/>\r\n                    <DirectoryEntry title=\"Program Installation Directory\" location={this.state.programDirectory} onBrowse={this.onDirectoryBrowse.bind(this, \"program\")}/>\r\n                    <DirectoryEntry title=\"Community Packages Directory\" location={this.state.packageDirectory} onBrowse={this.onDirectoryBrowse.bind(this, \"package\")}/>\r\n\r\n                    <div class=\"feature-list\">\r\n                        <h3>Mod Compatibility</h3>\r\n                        <p>This program modifies files that other mods may depend on. Enable these if you would like shared cockpit functionality in these mods, or uncheck if you experience issues.</p>\r\n                        <OptionalFeatures featureList={this.state.featureList} callback={this.featuresCallback.bind(this)}/>\r\n                    </div>\r\n                  \r\n                    <div class=\"feature-list-small\">\r\n                        <OptionalFeatures featureList={[{name: \"Desktop Shortcut\"}, {name: \"Clean Install\"}]} callback={this.optionsCallback.bind(this)}/>\r\n                    </div>\r\n\r\n                    <button class=\"generic-button install-button\" onClick={this.promptInstall.bind(this)} disabled={this.state.installing}>{this.state.installing ? \"Installing\" : \"Install\"}</button>\r\n                    <button class=\"generic-button uninstall-button\" onClick={this.promptUninstall.bind(this)} disabled={this.state.uninstalling}>{this.state.uninstalling ? \"Uninstalling\" : \"Uninstall\"}</button>\r\n                  \r\n                    <Overlay hidden={this.state.dialogActive}/>\r\n                    <Dialog hidden={this.state.dialogActive} title={this.state.currentDialog.title} description={this.state.currentDialog.description} buttonText={this.state.currentDialog.buttonText} onAck={this.dialogButtonClicked.bind(this)} onClose={this.dialogClosed.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}